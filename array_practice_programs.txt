// Array Initialization and Printing:

public class ArrayInitialization {
    public static void main(String[] args) {
        int[] numbers = {1, 2, 3, 4, 5};
        for (int i = 0; i < numbers.length; i++) {
            System.out.println(numbers[i]);
        }
    }
}

// Array Sum:

public class ArraySum {
    public static void main(String[] args) {
        int[] numbers = {1, 2, 3, 4, 5};
        int sum = 0;
        for (int num : numbers) {
            sum += num;
        }
        System.out.println("Sum: " + sum);
    }
}

// Array Average:

public class ArrayAverage {
    public static void main(String[] args) {
        int[] numbers = {1, 2, 3, 4, 5};
        double sum = 0;
        for (int num : numbers) {
            sum += num;
        }
        double average = sum / numbers.length;
        System.out.println("Average: " + average);
    }
}

// Array Maximum Value:

public class ArrayMaxValue {
    public static void main(String[] args) {
        int[] numbers = {1, 2, 3, 4, 5};
        int max = numbers[0];
        for (int i = 1; i < numbers.length; i++) {
            if (numbers[i] > max) {
                max = numbers[i];
            }
        }
        System.out.println("Maximum Value: " + max);
    }
}

// Array Minimum Value:

public class ArrayMinValue {
    public static void main(String[] args) {
        int[] numbers = {1, 2, 3, 4, 5};
        int min = numbers[0];
        for (int i = 1; i < numbers.length; i++) {
            if (numbers[i] < min) {
                min = numbers[i];
            }
        }
        System.out.println("Minimum Value: " + min);
    }
}

// Array Search:

public class ArraySearch {
    public static void main(String[] args) {
        int[] numbers = {1, 2, 3, 4, 5};
        int target = 3;
        int index = -1;
        for (int i = 0; i < numbers.length; i++) {
            if (numbers[i] == target) {
                index = i;
                break;
            }
        }
        if (index != -1) {
            System.out.println("Found at index: " + index);
        } else {
            System.out.println("Not found.");
        }
    }
}

// Array Reverse:

public class ArrayReverse {
    public static void main(String[] args) {
        int[] numbers = {1, 2, 3, 4, 5};
        int[] reversed = new int[numbers.length];
        for (int i = 0; i < numbers.length; i++) {
            reversed[i] = numbers[numbers.length - 1 - i];
        }
        System.out.print("Reversed array: ");
        for (int num : reversed) {
            System.out.print(num + " ");
        }
        System.out.println();
    }
}

// Array Sorting:

import java.util.Arrays;

public class ArraySorting {
    public static void main(String[] args) {
        int[] numbers = {5, 3, 1, 4, 2};
        Arrays.sort(numbers);
        System.out.print("Sorted array: ");
        for (int num : numbers) {
            System.out.print(num + " ");
        }
        System.out.println();
    }
}

// Array Merge:

public class ArrayMerge {
    public static void main(String[] args) {
        int[] arr1 = {1, 2, 3};
        int[] arr2 = {4, 5, 6};
        int[] merged = new int[arr1.length + arr2.length];
        int index = 0;

        for (int num : arr1) {
            merged[index++] = num;
        }

        for (int num : arr2) {
            merged[index++] = num;
        }

        System.out.print("Merged array: ");
        for (int num : merged) {
            System.out.print(num + " ");
        }
        System.out.println();
    }
}

// Array Copy:

public class ArrayCopy {
    public static void main(String[] args) {
        int[] sourceArray = {1, 2, 3, 4, 5};
        int[] destinationArray = new int[sourceArray.length];
        
        // Using System.arraycopy
        System.arraycopy(sourceArray, 0, destinationArray, 0, sourceArray.length);

        // Display copied array
        System.out.print("Copied array: ");
        for (int num : destinationArray) {
            System.out.print(num + " ");
        }
        System.out.println();
    }
}

// Array Length:

public class ArrayLength {
    public static void main(String[] args) {
        int[] numbers = {1, 2, 3, 4, 5};
        int length = numbers.length;
        System.out.println("Array length: " + length);
    }
}

// Array Contains:

public class ArrayContains {
    public static void main(String[] args) {
        int[] numbers = {1, 2, 3, 4, 5};
        int target = 3;
        boolean contains = false;
        for (int num : numbers) {
            if (num == target) {
                contains = true;
                break;
            }
        }
        if (contains) {
            System.out.println("Array contains " + target);
        } else {
            System.out.println("Array does not contain " + target);
        }
    }
}

// Array Frequency:

public class ArrayFrequency {
    public static void main(String[] args) {
        int[] numbers = {1, 2, 2, 3, 3, 3};
        int target = 3;
        int frequency = 0;
        for (int num : numbers) {
            if (num == target) {
                frequency++;
            }
        }
        System.out.println("Frequency of " + target + ": " + frequency);
    }
}

// Array Odd/Even Count:

public class ArrayOddEvenCount {
    public static void main(String[] args) {
        int[] numbers = {1, 2, 3, 4, 5};
        int evenCount = 0;
        int oddCount = 0;
        for (int num : numbers) {
            if (num % 2 == 0) {
                evenCount++;
            } else {
                oddCount++;
            }
        }
        System.out.println("Even numbers: " + evenCount);
        System.out.println("Odd numbers: " + oddCount);
    }
}

// Array Duplicate Removal:

import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;

public class ArrayDuplicateRemoval {
    public static void main(String[] args) {
        int[] numbers = {1, 2, 2, 3, 3, 4, 4, 5};
        List<Integer> distinctNumbers = new ArrayList<>();
        for (int num : numbers) {
            if (!distinctNumbers.contains(num)) {
                distinctNumbers.add(num);
            }
        }
        System.out.print("Array after removing duplicates: ");
        for (int num : distinctNumbers) {
            System.out.print(num + " ");
        }
        System.out.println();
    }
}

// Array Palindrome:

public class ArrayPalindrome {
    public static void main(String[] args) {
        char[] chars = {'r', 'a', 'c', 'e', 'c', 'a', 'r'};
        boolean isPalindrome = true;
        for (int i = 0; i < chars.length / 2; i++) {
            if (chars[i] != chars[chars.length - 1 - i]) {
                isPalindrome = false;
                break;
            }
        }
        if (isPalindrome) {
            System.out.println("The array is a palindrome.");
        } else {
            System.out.println("The array is not a palindrome.");
        }
    }
}

// Array Intersection:

import java.util.ArrayList;
import java.util.List;

public class ArrayIntersection {
    public static void main(String[] args) {
        int[] arr1 = {1, 2, 3, 4, 5};
        int[] arr2 = {3, 4, 5, 6, 7};
        List<Integer> intersection = new ArrayList<>();
        for (int num1 : arr1) {
            for (int num2 : arr2) {
                if (num1 == num2) {
                    intersection.add(num1);
                    break;
                }
            }
        }
        System.out.print("Intersection of arrays: ");
        for (int num : intersection) {
            System.out.print(num + " ");
        }
        System.out.println();
    }
}

// Array Union:

import java.util.ArrayList;
import java.util.List;

public class ArrayUnion {
    public static void main(String[] args) {
        int[] arr1 = {1, 2, 3};
        int[] arr2 = {3, 4, 5};
        List<Integer> union = new ArrayList<>();
        for (int num : arr1) {
            union.add(num);
        }
        for (int num : arr2) {
            if (!union.contains(num)) {
                union.add(num);
            }
        }
        System.out.print("Union of arrays: ");
        for (int num : union) {
            System.out.print(num + " ");
        }
        System.out.println();
    }
}

// Array Rotation:

public class ArrayRotation {
    public static void main(String[] args) {
        int[] numbers = {1, 2, 3, 4, 5};
        int rotations = 2; // Number of positions to rotate
        int length = numbers.length;
        int[] rotatedArray = new int[length];

        for (int i = 0; i < length; i++) {
            int newPosition = (i + rotations) % length;
            rotatedArray[newPosition] = numbers[i];
        }

        System.out.print("Rotated array: ");
        for (int num : rotatedArray) {
            System.out.print(num + " ");
        }
        System.out.println();
    }
}

// Array Transpose (2D Array):

public class ArrayTranspose {
    public static void main(String[] args) {
        int[][] matrix = {{1, 2, 3}, {4, 5, 6}, {7, 8, 9}};
        int rows = matrix.length;
        int cols = matrix[0].length;
        int[][] transposedMatrix = new int[cols][rows];

        for (int i = 0; i < rows; i++) {
            for (int j = 0; j < cols; j++) {
                transposedMatrix[j][i] = matrix[i][j];
            }
        }

        System.out.println("Original Matrix:");
        for (int i = 0; i < rows; i++) {
            for (int j = 0; j < cols; j++) {
                System.out.print(matrix[i][j] + " ");
            }
            System.out.println();
        }

        System.out.println("Transposed Matrix:");
        for (int i = 0; i < cols; i++) {
            for (int j = 0; j < rows; j++) {
                System.out.print(transposedMatrix[i][j] + " ");
            }
            System.out.println();
        }
    }
}

